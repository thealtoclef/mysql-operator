---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: mysqlusers.mysql.nakamasato.com
spec:
  group: mysql.nakamasato.com
  names:
    kind: MySQLUser
    listKind: MySQLUserList
    plural: mysqlusers
    singular: mysqluser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: true if user is created
      jsonPath: .status.userCreated
      name: MySQLUser
      type: boolean
    - description: The phase of this MySQLUser
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: The reason for the current phase of this MySQLUser
      jsonPath: .status.reason
      name: Reason
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLUser is the Schema for the mysqlusers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MySQLUserSpec defines the desired state of MySQLUser
            properties:
              clusterName:
                description: Cluster name to reference to, which decides the destination
                type: string
                x-kubernetes-validations:
                - message: Cluster name is immutable
                  rule: self == oldSelf
              grants:
                description: Grants of database user
                items:
                  description: Grant defines the privileges and the resource for a
                    MySQL user
                  properties:
                    privileges:
                      description: Privileges to grant to the user
                      items:
                        type: string
                      type: array
                    target:
                      description: Target on which the privileges are applied
                      type: string
                  required:
                  - privileges
                  - target
                  type: object
                type: array
              host:
                default: '%'
                description: Host address where the client connects, default to '%'
                pattern: ^(\*|%|[a-zA-Z0-9._-]+|\d{1,3}(\.\d{1,3}){3})$
                type: string
                x-kubernetes-validations:
                - message: Host is immutable
                  rule: self == oldSelf
              secretRef:
                description: Secret to reference to, which contains the password
                properties:
                  key:
                    type: string
                  name:
                    type: string
                required:
                - key
                - name
                type: object
              username:
                description: Username
                maxLength: 64
                pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
                type: string
                x-kubernetes-validations:
                - message: Username is immutable
                  rule: self == oldSelf
            required:
            - clusterName
            - host
            - secretRef
            - username
            type: object
          status:
            description: MySQLUserStatus defines the observed state of MySQLUser
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              phase:
                type: string
              reason:
                type: string
              userCreated:
                default: false
                description: true if user is created
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
